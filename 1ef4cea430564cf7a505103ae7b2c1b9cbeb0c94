{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "149512ca_c6771ba0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 10,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "\"protected by UnlockedDeviceRequired keys\", as we\u0027re no longer using the term \"screen lock bound keys\".  Or, just write something like: transparently encrypted directories that can only be opened when the device is unlocked.",
      "range": {
        "startLine": 10,
        "startChar": 36,
        "endLine": 10,
        "endChar": 71
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d8fe685b_c1b20dcb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 10,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "149512ca_c6771ba0",
      "range": {
        "startLine": 10,
        "startChar": 36,
        "endLine": 10,
        "endChar": 71
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ead88702_a0f81ebb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 17,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "This seems to be referring to /data/storage_area/userId, but the rest of the paragraph is about /data/storage_area.",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 45
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3399c56_46364ac3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 17,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Good catch, thanks",
      "parentUuid": "ead88702_a0f81ebb",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 45
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "886c1d47_e497be8f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 31,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "Please follow the usual git convention of line wrapping commit messages at 72 columns",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 99
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e95c4916_d19e34e6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 31,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "886c1d47_e497be8f",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 99
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ad8a1d3_5acf6cbf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 39,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "assign encryption policies to storage area directories?",
      "range": {
        "startLine": 39,
        "startChar": 11,
        "endLine": 39,
        "endChar": 42
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "24e222b5_17fbd371",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 39,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2ad8a1d3_5acf6cbf",
      "range": {
        "startLine": 39,
        "startChar": 11,
        "endLine": 39,
        "endChar": 42
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1b8d7052_73234539",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 52,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "This is AOSP, so this line is unnecessary.",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 66
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c594741_e83999e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 39
      },
      "lineNbr": 52,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1b8d7052_73234539",
      "range": {
        "startLine": 52,
        "startChar": 0,
        "endLine": 52,
        "endChar": 66
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "72307db0_be0c9eb6",
        "filename": "private/app.te",
        "patchSetId": 39
      },
      "lineNbr": 820,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "Should this go in `app_neverallows.te` instead?",
      "range": {
        "startLine": 818,
        "startChar": 0,
        "endLine": 820,
        "endChar": 6
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1b5da0e2_4705ff4b",
        "filename": "private/app.te",
        "patchSetId": 39
      },
      "lineNbr": 820,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Good idea; I\u0027ve moved it",
      "parentUuid": "72307db0_be0c9eb6",
      "range": {
        "startLine": 818,
        "startChar": 0,
        "endLine": 820,
        "endChar": 6
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "618be95a_e51d236a",
        "filename": "private/app_neverallows.te",
        "patchSetId": 39
      },
      "lineNbr": 73,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "The rule just above this uses execute_no_trans instead of execute.  Why is this one different?  If it\u0027s intentional, can the reason be documented here?",
      "range": {
        "startLine": 73,
        "startChar": 54,
        "endLine": 73,
        "endChar": 61
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32cfd7b0_d1b7c23c",
        "filename": "private/app_neverallows.te",
        "patchSetId": 39
      },
      "lineNbr": 73,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "This was the result of a previous comment discussion: https://android-review.git.corp.google.com/c/platform/system/sepolicy/+/2960065/comment/1cbe07a9_d7d81bc5/\nI\u0027ve added a comment in the file to clarify.\n\nIt seems blocking `execute` is a better, stronger guarantee but it\u0027s not feasible to do so for all of `app_data_file` because it would cause backwards compatibility issues.",
      "parentUuid": "618be95a_e51d236a",
      "range": {
        "startLine": 73,
        "startChar": 54,
        "endLine": 73,
        "endChar": 61
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28e394bc_99e3cdb5",
        "filename": "private/domain.te",
        "patchSetId": 39
      },
      "lineNbr": 1606,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "Why does `artd` need to be excluded from this `neverallow` rule?",
      "range": {
        "startLine": 1606,
        "startChar": 4,
        "endLine": 1606,
        "endChar": 9
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "52488206_29e1c37d",
        "filename": "private/domain.te",
        "patchSetId": 39
      },
      "lineNbr": 1606,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "There are some allows in `artd.te` over all of `app_data_file_type`. If we think it should be blocked for storage areas, then I can explicitly deny the storage area types in these artd allows.",
      "parentUuid": "28e394bc_99e3cdb5",
      "range": {
        "startLine": 1606,
        "startChar": 4,
        "endLine": 1606,
        "endChar": 9
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "21d9e7d2_04d3b525",
        "filename": "private/domain.te",
        "patchSetId": 39
      },
      "lineNbr": 1606,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-30T01:40:40Z",
      "side": 1,
      "message": "Okay, that makes sense.  I just wanted to make sure we weren\u0027t going out of our way to allow it unnecessarily.",
      "parentUuid": "52488206_29e1c37d",
      "range": {
        "startLine": 1606,
        "startChar": 4,
        "endLine": 1606,
        "endChar": 9
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b46aea28_597eacba",
        "filename": "private/domain.te",
        "patchSetId": 39
      },
      "lineNbr": 1648,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "Are all these exceptions needed/desirable?  It looks like these exceptions were copied from the existing app data rules, and many of them may not apply to storage areas.",
      "range": {
        "startLine": 1636,
        "startChar": 0,
        "endLine": 1648,
        "endChar": 11
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4feb59ec_d29ded67",
        "filename": "private/domain.te",
        "patchSetId": 39
      },
      "lineNbr": 1648,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "You\u0027re right; I\u0027ve removed some of them (I think the rest are required, but not resolving yet, in case we want to remove more e.g., artd, based on our discussion about artd in another comment).",
      "parentUuid": "b46aea28_597eacba",
      "range": {
        "startLine": 1636,
        "startChar": 0,
        "endLine": 1648,
        "endChar": 11
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6b322ef9_611efcc6",
        "filename": "private/domain.te",
        "patchSetId": 39
      },
      "lineNbr": 1648,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-30T01:40:40Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "4feb59ec_d29ded67",
      "range": {
        "startLine": 1636,
        "startChar": 0,
        "endLine": 1648,
        "endChar": 11
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b8806a8_ae12e5eb",
        "filename": "private/file.te",
        "patchSetId": 39
      },
      "lineNbr": 196,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "write \"storageAreaName\" here?",
      "range": {
        "startLine": 196,
        "startChar": 55,
        "endLine": 196,
        "endChar": 56
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb837ec3_35d648ae",
        "filename": "private/file.te",
        "patchSetId": 39
      },
      "lineNbr": 196,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3b8806a8_ae12e5eb",
      "range": {
        "startLine": 196,
        "startChar": 55,
        "endLine": 196,
        "endChar": 56
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f008829_5815446b",
        "filename": "private/file.te",
        "patchSetId": 39
      },
      "lineNbr": 201,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "storage_area_keys, not storage_area_keys/*, since this actually gets applied to storage_area_keys recursively (not just its children)",
      "range": {
        "startLine": 201,
        "startChar": 23,
        "endLine": 201,
        "endChar": 42
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "092819a4_853b53d9",
        "filename": "private/file.te",
        "patchSetId": 39
      },
      "lineNbr": 201,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Good point",
      "parentUuid": "0f008829_5815446b",
      "range": {
        "startLine": 201,
        "startChar": 23,
        "endLine": 201,
        "endChar": 42
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a0885334_7fcd1071",
        "filename": "private/init.te",
        "patchSetId": 39
      },
      "lineNbr": 856,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "Does this not get handled by the earlier rules that give `init` access to all files (`file_type`) except ones that are explicitly denied?",
      "range": {
        "startLine": 852,
        "startChar": 0,
        "endLine": 856,
        "endChar": 2
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80e9fd0a_8165848d",
        "filename": "private/init.te",
        "patchSetId": 39
      },
      "lineNbr": 856,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "That\u0027s true; currently, the storage area types are in the list of file types that are explicitly denied. I did this to match how `app_data_file` is handled; there is no existing `allow` rule that gives `init` the specific set of permissions required without any extra ones granted. If we are ok with giving `init` some extra permissions over storage area files, then we can remove these `allow`s and remove the explicit denials from the earlier `file_type` allows.",
      "parentUuid": "a0885334_7fcd1071",
      "range": {
        "startLine": 852,
        "startChar": 0,
        "endLine": 856,
        "endChar": 2
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6a34e899_79e69ab2",
        "filename": "private/init.te",
        "patchSetId": 39
      },
      "lineNbr": 856,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-30T01:40:40Z",
      "side": 1,
      "message": "Which rule denies it?  `storage_area_key_file` differs from the other storage area types in that it isn\u0027t included in `app_data_file_type`.  So it\u0027s basically treated as system data, which probably makes sense since apps don\u0027t get direct access to it.",
      "parentUuid": "80e9fd0a_8165848d",
      "range": {
        "startLine": 852,
        "startChar": 0,
        "endLine": 856,
        "endChar": 2
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d0ccc4d_0dc13eb9",
        "filename": "private/installd.te",
        "patchSetId": 39
      },
      "lineNbr": 245,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "These `allow` rules are in the section of the file marked \"Neverallow rules\".  They should go before that.",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 245,
        "endChar": 2
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1b30f5a_d5d764af",
        "filename": "private/installd.te",
        "patchSetId": 39
      },
      "lineNbr": 245,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d0ccc4d_0dc13eb9",
      "range": {
        "startLine": 241,
        "startChar": 0,
        "endLine": 245,
        "endChar": 2
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3f919aca_31d6789f",
        "filename": "private/vold_prepare_subdirs.te",
        "patchSetId": 39
      },
      "lineNbr": 31,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2024-04-29T23:29:12Z",
      "side": 1,
      "message": "The proposed policy gives both `vold` and `vold_prepare_subdirs` access to storage_area_key_file.  Why do both need access?",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 74
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc66f5af_58495a90",
        "filename": "private/vold_prepare_subdirs.te",
        "patchSetId": 39
      },
      "lineNbr": 31,
      "author": {
        "id": 1954616
      },
      "writtenOn": "2024-04-30T00:59:25Z",
      "side": 1,
      "message": "`vold_prepare_subdirs` prepares the key directory for a user (in the same way it prepares the user\u0027s other CE directories such as misc_ce/vold), and `vold` creates the storage area keys on `openStorageArea`, and removes them on `deleteStorageArea`",
      "parentUuid": "3f919aca_31d6789f",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 74
      },
      "revId": "1ef4cea430564cf7a505103ae7b2c1b9cbeb0c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}