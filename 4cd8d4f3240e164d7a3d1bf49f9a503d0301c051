{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6e586c2a_891ec4d4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2024-09-03T17:55:06Z",
      "side": 1,
      "message": "Dear Alice,\n\nAlthough you suspected about potential SELinux change around vsock,\nI only needed standard SELinux labels for launching VMs.\n(i.e. nothing extra for VM HAL)\n\nIs it working as intended?",
      "revId": "4cd8d4f3240e164d7a3d1bf49f9a503d0301c051",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd605fb6_f5e104cf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2024-09-04T09:38:18Z",
      "side": 1,
      "message": "Actually I\u0027m a bit surprised that this is enough to enable SELinux, do we need some sort of hal_server/client definition to make the HAL work? Plus, I also added a bunch of accessor name check, it seems that it\u0027s also needed in this cl...",
      "revId": "4cd8d4f3240e164d7a3d1bf49f9a503d0301c051",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0e45f78_39e7ba40",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2024-09-04T13:51:02Z",
      "side": 1,
      "message": "+CC: @smoreland@google.com\n\nI was also surprised that IAccessor test passes only with this, \\\nwithout any change around vsock/binder.\n\n\nDear Steven, could you take a look and give some advice?\nThis CL isn\u0027t for submit, but just to investigate necessary changes for IAccessor.",
      "parentUuid": "bd605fb6_f5e104cf",
      "revId": "4cd8d4f3240e164d7a3d1bf49f9a503d0301c051",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e946550_156dab8c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-09-04T22:05:54Z",
      "side": 1,
      "message": "well, there\u0027s no new process domain added here. How is the test running? Is the test running as root?",
      "parentUuid": "e0e45f78_39e7ba40",
      "revId": "4cd8d4f3240e164d7a3d1bf49f9a503d0301c051",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f832fe99_fa4108a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019013
      },
      "writtenOn": "2024-09-05T01:31:34Z",
      "side": 1,
      "message": "Seems root aosp/3250752 (correct me if I\u0027m wrong)\n\nShould the accessor demo define its own? This is for reference impl for VM HAL (e.g. keymint), so root seems OK. (compos is doing the same).",
      "parentUuid": "9e946550_156dab8c",
      "revId": "4cd8d4f3240e164d7a3d1bf49f9a503d0301c051",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0410204_b1260f6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-09-05T01:41:25Z",
      "side": 1,
      "message": "We may want to create a domain for it, and create an init rule for it, so we can see what it would take to build an RPC service APEX using IAccessor as a system component, as this is what vendors will need to implement.\n\nI think Devin was going to do this for a system-defined HAL, so that we had an end-to-end example AVF users can put in production. Maybe you could work with him to converge this demo on that?\n\nI also suggest we move it into hardware/interfaces, probably under vibrator (because we use this as our example HAL for everything, including extensions, and vendor/product HAL clients). If it\u0027s there, we can be sure there is no special apex_available rule which in the Virtualization code allows this to work, but for our partners and other Android developers would block them from productionizing this.",
      "parentUuid": "f832fe99_fa4108a2",
      "revId": "4cd8d4f3240e164d7a3d1bf49f9a503d0301c051",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}