{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "76ad1765_6db35887",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 20
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "I don\u0027t have the knowledge to review the objects and permissions in full detail. I trust that Alan has taken a good hard look at them.",
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db1a5378_ce50eead",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 153,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "What does this mean more technically? That it runs in a way that doesn\u0027t affect the real boot images?\n\nHowever odrefresh inside the chroot will (over)write e.g. odrefresh-metrics.xml in the bind mounted /data/misc/odrefresh, won\u0027t it?",
      "range": {
        "startLine": 153,
        "startChar": 43,
        "endLine": 153,
        "endChar": 54
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b689072c_a81cbb13",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 153,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "It means to run odrefresh in a way that doesn\u0027t affect the real boot images, metrics, etc.\n\nTo achieve that, `artd` will bind-mount temp dirs at `/data/misc/apexdata/com.android.art` and `/data/misc/odrefresh` so that odrefresh will write to temp dirs instead of overwriting any existing files.",
      "parentUuid": "db1a5378_ce50eead",
      "range": {
        "startLine": 153,
        "startChar": 43,
        "endLine": 153,
        "endChar": 54
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10e46bc0_ca82263a",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 153,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T21:31:40Z",
      "side": 1,
      "message": "\u003e It means to run odrefresh in a way that doesn\u0027t affect the real boot images, metrics, etc.\n\nGood, please clarify that then.\n\n\u003e will bind-mount temp dirs at /data/misc/apexdata/com.android.art and /data/misc/odrefresh\n\nAha, that\u0027s something to describe in the README later, but I think it wouldn\u0027t hurt to mention it in the clarification as well.",
      "parentUuid": "b689072c_a81cbb13",
      "range": {
        "startLine": 153,
        "startChar": 43,
        "endLine": 153,
        "endChar": 54
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4c1f3f6f_61152ca3",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 153,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T22:20:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10e46bc0_ca82263a",
      "range": {
        "startLine": 153,
        "startChar": 43,
        "endLine": 153,
        "endChar": 54
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6797d148_8ed6cff4",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 163,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "Can you please fill me in on what environment variables these are?",
      "range": {
        "startLine": 163,
        "startChar": 55,
        "endLine": 163,
        "endChar": 63
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a2ae4cc_f1a6676f",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 163,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "https://cs.android.com/android/platform/superproject/main/+/main:system/core/rootdir/init.environ.rc.in",
      "parentUuid": "6797d148_8ed6cff4",
      "range": {
        "startLine": 163,
        "startChar": 55,
        "endLine": 163,
        "endChar": 63
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "662aa9cc_91c24837",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 163,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T21:31:40Z",
      "side": 1,
      "message": "I meant the ones that we need here.",
      "parentUuid": "3a2ae4cc_f1a6676f",
      "range": {
        "startLine": 163,
        "startChar": 55,
        "endLine": 163,
        "endChar": 63
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "788a404b_dcf500c7",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 163,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T22:20:11Z",
      "side": 1,
      "message": "`artd` calls many other programs such as `dex2oat`, which then depends on some libraries. We don\u0027t know which env vars those programs/libraries need. We just initialize all the env vars like `init` does during boot so that they are available when needed.",
      "parentUuid": "662aa9cc_91c24837",
      "range": {
        "startLine": 163,
        "startChar": 55,
        "endLine": 163,
        "endChar": 63
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "18abade8_da883f74",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 181,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "Nit: \"for art_exec_exec\", just to spell out what to look for (and also in case more exceptions get added later).",
      "range": {
        "startLine": 181,
        "startChar": 15,
        "endLine": 181,
        "endChar": 16
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f83d541d_79d89990",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 181,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "18abade8_da883f74",
      "range": {
        "startLine": 181,
        "startChar": 15,
        "endLine": 181,
        "endChar": 16
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8bd9259c_c0983e9a",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 181,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T21:31:40Z",
      "side": 1,
      "message": "I see it in a different file, but here too please.",
      "parentUuid": "f83d541d_79d89990",
      "range": {
        "startLine": 181,
        "startChar": 15,
        "endLine": 181,
        "endChar": 16
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b0dbe35a_b40777ad",
        "filename": "private/artd.te",
        "patchSetId": 20
      },
      "lineNbr": 181,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T22:20:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8bd9259c_c0983e9a",
      "range": {
        "startLine": 181,
        "startChar": 15,
        "endLine": 181,
        "endChar": 16
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85223da4_567e73ab",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 96,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "Not that I think it matters to these rules, but are you certain we can make do with an empty linker config inside the chroot?",
      "range": {
        "startLine": 96,
        "startChar": 19,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a1a386d9_dba34b3d",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 96,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "Yes, it works. In fact, I learned this trick from CompOS.\n\nhttps://cs.android.com/android/platform/superproject/main/+/main:packages/modules/Virtualization/microdroid/init.rc;l\u003d25;drc\u003da5b90b6f64e7e39cb3f308120578434dfcb78ad0",
      "parentUuid": "85223da4_567e73ab",
      "range": {
        "startLine": 96,
        "startChar": 19,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "95d1bbaf_19d50d85",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 96,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T21:31:40Z",
      "side": 1,
      "message": "Which binaries will execute with that empty linker config? It\u0027ll get replaced with a proper one soon enough, right?",
      "parentUuid": "a1a386d9_dba34b3d",
      "range": {
        "startLine": 96,
        "startChar": 19,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e160500_349163b2",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 96,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T22:20:11Z",
      "side": 1,
      "message": "\u003e Which binaries will execute with that empty linker config?\n\n`apexd` and `linkerconfig`.\n\n\u003e It\u0027ll get replaced with a proper one soon enough, right?\n\nYes, by `linkerconfig`.",
      "parentUuid": "95d1bbaf_19d50d85",
      "range": {
        "startLine": 96,
        "startChar": 19,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "331b82eb_72fbbae3",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 96,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-26T21:30:45Z",
      "side": 1,
      "message": "Check. Please add \"... until linkerconfig has run\" to clarify that.",
      "parentUuid": "4e160500_349163b2",
      "range": {
        "startLine": 96,
        "startChar": 19,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6726350_bb085418",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 96,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-26T22:35:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "331b82eb_72fbbae3",
      "range": {
        "startLine": 96,
        "startChar": 19,
        "endLine": 96,
        "endChar": 24
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68f8dda5_6ee13a57",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 97,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "Does SELinux apply paths relative to the chroot?",
      "range": {
        "startLine": 97,
        "startChar": 26,
        "endLine": 97,
        "endChar": 43
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dfdb1de6_2a632758",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 97,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "SELinux rules apply to labels, not paths. The path patterns in [`system/sepolicy/private/file_contexts`](https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/private/file_contexts) are just for conveniently assigning labels through `restorecon`, which `init` does during boot and other programs can also do. During Pre-reboot Dexopt, because the path patterns don\u0027t match the paths in chroot, we will call `setfilecon` to manually assign appropriate labels.",
      "parentUuid": "68f8dda5_6ee13a57",
      "range": {
        "startLine": 97,
        "startChar": 26,
        "endLine": 97,
        "endChar": 43
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fba9f18_6b26c9db",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 97,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T21:31:40Z",
      "side": 1,
      "message": "\u003e During Pre-reboot Dexopt, because the path patterns don\u0027t match the paths in chroot, we will call setfilecon to manually assign appropriate labels.\n\nI see. I\u0027d like to understand better how that `setfilecon` process will work. How will these rules get used? Doesn\u0027t this one make init\u0027s `restorecon` call give dexopt_chroot_setup write access on `/linkerconfig(/.*)?` in the real root at boot, which dexopt_chroot_setup has no reason to write?",
      "parentUuid": "dfdb1de6_2a632758",
      "range": {
        "startLine": 97,
        "startChar": 26,
        "endLine": 97,
        "endChar": 43
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4cbee95c_bb5120b8",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 97,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T22:20:11Z",
      "side": 1,
      "message": "\u003e I\u0027d like to understand better how that `setfilecon` process will work.\n\n`setfilecon` is a function that assigns the given file/dir the given label. A process can call it on a file/dir as long as it has the `relabelfrom` permission for the old label and the `relabelto` permission for the new label. There is not path pattern matching involved.\n\nFor example, during Pre-reboot Dexopt, `dexopt_chroot_setup` mounts a tmpfs at `/linkerconfig` in chroot. The `/linkerconfig` dir initial gets the `pre_reboot_dexopt_file` label because of line 21. `dexopt_chroot_setup` then makes a call like `setfilecon(\"/path/to/chroot/linkerconfig\", \"linkerconfig_file\")` to relabel the dir to `linkerconfig_file`. It\u0027s allowed to do so because it has `relabelfrom` for `pre_reboot_dexopt_file` and `relabelto` for `linkerconfig_file`.\n\n\u003e How will these rules get used?\n\nThe rules specify the label(s) that they apply to (in this case, `linkerconfig_file`). They are used as long as a file/dir has this label.\n\n\u003e Doesn\u0027t this one make init\u0027s `restorecon` call give dexopt_chroot_setup write access on `/linkerconfig(/.*)?` in the real root at boot, which dexopt_chroot_setup has no reason to write?\n\nThat\u0027s true, but dexopt_chroot_setup never writes to the real `/linkerconfig`.",
      "parentUuid": "0fba9f18_6b26c9db",
      "range": {
        "startLine": 97,
        "startChar": 26,
        "endLine": 97,
        "endChar": 43
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7d19ff8_d3caea51",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 97,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-26T21:30:45Z",
      "side": 1,
      "message": "Discussed offline. I think a few more comments can help make this more clear.",
      "parentUuid": "4cbee95c_bb5120b8",
      "range": {
        "startLine": 97,
        "startChar": 26,
        "endLine": 97,
        "endChar": 43
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fcdcbf1_33ce265b",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 109,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "It\u0027s not obvious to an sepolicy noob like me that the rule does this. I suggest phrasing it something like \"Allow dexopt_chroot_setup to execute art_exec_exec without a domain transition\".",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 59
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bdd68434_0e5b5419",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 109,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6fcdcbf1_33ce265b",
      "range": {
        "startLine": 109,
        "startChar": 2,
        "endLine": 109,
        "endChar": 59
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f188c3a_96aef49f",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 139,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "Why does this domain need to be excluded?",
      "range": {
        "startLine": 139,
        "startChar": 3,
        "endLine": 139,
        "endChar": 14
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc9750df_875d8790",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 139,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "Because vendor_init can basically access everything. https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/public/vendor_init.te;l\u003d49;drc\u003d948ae1506054cfd14920d0aeb0011813a79c53b4",
      "parentUuid": "8f188c3a_96aef49f",
      "range": {
        "startLine": 139,
        "startChar": 3,
        "endLine": 139,
        "endChar": 14
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d78887a4_261ea9ec",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 139,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T21:31:40Z",
      "side": 1,
      "message": "Perhaps, but why does it need to access `pre_reboot_dexopt_file` specifically? Do some rules fail without this exclusion?",
      "parentUuid": "dc9750df_875d8790",
      "range": {
        "startLine": 139,
        "startChar": 3,
        "endLine": 139,
        "endChar": 14
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02593c46_23a0f580",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 139,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T22:20:11Z",
      "side": 1,
      "message": "It doesn\u0027t need to access `pre_reboot_dexopt_file` in practice, but it has access to almost everything because of the rule that I pointed out above, and that rule conflicts with this neverallow rule if we don\u0027t exclude `vendor_init`.",
      "parentUuid": "d78887a4_261ea9ec",
      "range": {
        "startLine": 139,
        "startChar": 3,
        "endLine": 139,
        "endChar": 14
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cbf8db44_c6a561e2",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 139,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-26T21:30:45Z",
      "side": 1,
      "message": "Why not exclude `pre_reboot_dexopt_file` in that `allow` rule instead? (No need to address in this CL though.)",
      "parentUuid": "02593c46_23a0f580",
      "range": {
        "startLine": 139,
        "startChar": 3,
        "endLine": 139,
        "endChar": 14
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8546a4d_dbed3a40",
        "filename": "private/dexopt_chroot_setup.te",
        "patchSetId": 20
      },
      "lineNbr": 139,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-26T22:35:29Z",
      "side": 1,
      "message": "1. I dare not change the public SELinux policy unless instructed by Alan because we passed the public policy freeze date.\n2. I think the intention of that allow rule is to allow vendor_init to access almost everything, and it might be there for a good reason, so changing it may break things.\n\nBut sure, I can make the change in a follow up CL if it is okay.",
      "parentUuid": "cbf8db44_c6a561e2",
      "range": {
        "startLine": 139,
        "startChar": 3,
        "endLine": 139,
        "endChar": 14
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff7b81f5_d8a399e5",
        "filename": "private/file_contexts",
        "patchSetId": 20
      },
      "lineNbr": 907,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "Nit: Lowercase",
      "range": {
        "startLine": 907,
        "startChar": 25,
        "endLine": 907,
        "endChar": 28
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50da7e11_108e0a6c",
        "filename": "private/file_contexts",
        "patchSetId": 20
      },
      "lineNbr": 907,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ff7b81f5_d8a399e5",
      "range": {
        "startLine": 907,
        "startChar": 25,
        "endLine": 907,
        "endChar": 28
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "16eb325b_5b22a21b",
        "filename": "private/file_contexts",
        "patchSetId": 20
      },
      "lineNbr": 916,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T15:55:05Z",
      "side": 1,
      "message": "Since the README doesn\u0027t mention it, can you please briefly tell me what this is for?",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 916,
        "endChar": 19
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f631cdc_83e70451",
        "filename": "private/file_contexts",
        "patchSetId": 20
      },
      "lineNbr": 916,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T17:11:20Z",
      "side": 1,
      "message": "This is for holding the temp file written by `derive_classpath` and the temp dirs mounted at `/data/misc/apexdata/com.android.art` and `/data/misc/odrefresh`.",
      "parentUuid": "16eb325b_5b22a21b",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 916,
        "endChar": 19
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c119cc9d_776de8cc",
        "filename": "private/file_contexts",
        "patchSetId": 20
      },
      "lineNbr": 916,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-25T21:31:40Z",
      "side": 1,
      "message": "Aha, this path should be read relative to the chroot root? (Here too I wonder about specifying paths inside the chroot this way, but there\u0027s another thread about that.)",
      "parentUuid": "0f631cdc_83e70451",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 916,
        "endChar": 19
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2aec7e0e_a40ae117",
        "filename": "private/file_contexts",
        "patchSetId": 20
      },
      "lineNbr": 916,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-25T22:20:11Z",
      "side": 1,
      "message": "Yes, that\u0027s what the comment means by \"inside chroot\".",
      "parentUuid": "c119cc9d_776de8cc",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 916,
        "endChar": 19
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8350938_4fbd6afd",
        "filename": "private/file_contexts",
        "patchSetId": 20
      },
      "lineNbr": 916,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2024-03-26T21:30:45Z",
      "side": 1,
      "message": "Following offline discussion, I think this is more confusing than helpful since it\u0027s not the real path and we can\u0027t use restorecon on it. It\u0027s better to delete it.",
      "parentUuid": "2aec7e0e_a40ae117",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 916,
        "endChar": 19
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63e1cfd1_6e5b6851",
        "filename": "private/file_contexts",
        "patchSetId": 20
      },
      "lineNbr": 916,
      "author": {
        "id": 1884045
      },
      "writtenOn": "2024-03-26T22:35:29Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a8350938_4fbd6afd",
      "range": {
        "startLine": 916,
        "startChar": 0,
        "endLine": 916,
        "endChar": 19
      },
      "revId": "4d908566002c57001c8339b80a9027a4189468e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}