{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "293ed44d_51322088",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-05-23T00:08:59Z",
      "side": 1,
      "message": "Honestly I\u0027m still uncomfortable for these kinds of changes, because these don\u0027t follow trunk stable\u0027s flagging policy.\n\nBut I\u0027m going to approve this if we can move the property to private/. Technically the property **is** an API for vendors, but at least these won\u0027t break sepolicy compatibility at least.",
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7ad4d44_c99a1154",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-05-23T00:33:33Z",
      "side": 1,
      "message": "It\u0027s adding a flag so that we can turn our feature off where it\u0027s currently on (see regression bug). Thank you!",
      "parentUuid": "293ed44d_51322088",
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ce859dd_92cef735",
        "filename": "private/compat/202404/202404.ignore.cil",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-05-23T00:08:59Z",
      "side": 1,
      "message": "remove this (if you are moving it to private)",
      "range": {
        "startLine": 11,
        "startChar": 4,
        "endLine": 11,
        "endChar": 15
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "63130ee0_0cca3032",
        "filename": "private/property_contexts",
        "patchSetId": 3
      },
      "lineNbr": 976,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-05-23T00:08:59Z",
      "side": 1,
      "message": "The name `ro.fstype.data` seems a little misleading because it looks like some \"data\" about \"fstype\". Actually this is a type of data partition.\n\nBut probably it\u0027s fine because we have other similar properties like \"ro.boottime.init.mount.data\".",
      "range": {
        "startLine": 976,
        "startChar": 0,
        "endLine": 976,
        "endChar": 14
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2b1c35e_ebea555b",
        "filename": "private/property_contexts",
        "patchSetId": 3
      },
      "lineNbr": 976,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-05-23T00:25:43Z",
      "side": 1,
      "message": "do we really need `ro.`? we are discouraging it and instead recommending controlling access by sepolicy rules.",
      "range": {
        "startLine": 976,
        "startChar": 0,
        "endLine": 976,
        "endChar": 3
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4501a68a_d24fde56",
        "filename": "private/property_contexts",
        "patchSetId": 3
      },
      "lineNbr": 976,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-05-23T00:33:33Z",
      "side": 1,
      "message": "This property should probably not be ro, since we could make it change at runtime.\n\nThough, I\u0027m a fan of ro. ;p please share if you have a doc on this discussion. Curious.",
      "parentUuid": "d2b1c35e_ebea555b",
      "range": {
        "startLine": 976,
        "startChar": 0,
        "endLine": 976,
        "endChar": 3
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dc9d516e_01022b81",
        "filename": "private/property_contexts",
        "patchSetId": 3
      },
      "lineNbr": 976,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-05-23T00:34:01Z",
      "side": 1,
      "message": "though - if it changes at runtime, it might introduce more risk - so if it\u0027s easier to make sure the flag is only set once, it\u0027s the best",
      "parentUuid": "4501a68a_d24fde56",
      "range": {
        "startLine": 976,
        "startChar": 0,
        "endLine": 976,
        "endChar": 3
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b0ce4013_b82e18da",
        "filename": "private/property_contexts",
        "patchSetId": 3
      },
      "lineNbr": 976,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-05-23T00:47:31Z",
      "side": 1,
      "message": "Quoting tomcherry\u0027s original comment when I was writing (https://source.android.com/docs/core/architecture/configuration/add-system-properties)\n\n\u003e We should strongly discourage new ro. properties given all of the problems that we\u0027ve had with them. Particularly since property names are their API, it means that it is impossible to make a ro. property read-write after introducing it. I\u0027ve seen this issue on at least a few bugs.\n\u003e \n\u003e Unless a property absolutely must be unchanged after it is written, e.g. ro.debuggable, and only if we cannot trust the writer to handle that safely, should we allow \"ro.\" in the future.\n\nWe\u0027re guiding people to use `ro` only when we\u0027re 100% sure. (e.g. `ro.debuggable`, various build properties, etc.)\n\n\u003e if it changes at runtime, it might introduce more risk \n\nI think that\u0027s why we have sepolicy neverallow rules.",
      "parentUuid": "dc9d516e_01022b81",
      "range": {
        "startLine": 976,
        "startChar": 0,
        "endLine": 976,
        "endChar": 3
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82e9f76e_a43deec9",
        "filename": "private/property_contexts",
        "patchSetId": 3
      },
      "lineNbr": 976,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-05-24T01:16:03Z",
      "side": 1,
      "message": "ack - though in this case I request we keep ro. since it is controlling the boot process.",
      "parentUuid": "b0ce4013_b82e18da",
      "range": {
        "startLine": 976,
        "startChar": 0,
        "endLine": 976,
        "endChar": 3
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06f3b381_48fd4857",
        "filename": "public/property.te",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-05-23T00:08:59Z",
      "side": 1,
      "message": "you can\u0027t add public properties without api guard. you can workaround it by moving this to private/property.te.",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 35
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e82ff7d_fd0b0b37",
        "filename": "public/property.te",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-05-23T07:19:50Z",
      "side": 1,
      "message": "Ah, thinking again, we can just add api guard, if we only need vendor_init to access it.",
      "parentUuid": "06f3b381_48fd4857",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 35
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2310cec3_053a2d93",
        "filename": "public/property.te",
        "patchSetId": 3
      },
      "lineNbr": 80,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-05-24T01:16:03Z",
      "side": 1,
      "message": "+1, the board API guard should work, agree",
      "parentUuid": "9e82ff7d_fd0b0b37",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 35
      },
      "revId": "63714502cf9b328aff32c562db4fdaa7cb1de948",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}